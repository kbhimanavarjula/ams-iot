{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "solutionType": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "solution with monitoring",
                "solution without monitoring"
            ],
            "metadata": {
                "description": "1.solution with monitoring - this will deploy core digital signage solution & monitoring components. 2. solution without monitoring - this will deploy core digital signage solution"
            }
        },
        "costingModel": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "One",
                "Two",
                "Three",
                "Four"
            ],
            "metadata": {
                "description": "specify the costing model"
            }
        },
        "locationDr": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "specify the region for webapps and azure sqlserver desaster recovary it should be different of resource group region"
            }
        },
        "appInsightsLocation": {
            "type": "string",
            "defaultValue": "westus2",
            "allowedValues": [
                "eastus",
                "northeurope",
                "southcentralus",
                "southeastasia",
                "westeurope",
                "westus2"
            ],
            "metadata": {
                "description": "specify the region for application insights"
            }
        },
        "iotHubName1": {
            "type": "string",
            "defaultValue": "",
            "minLength": 3,
            "metadata": {
                "description": "Name of the IoT Hub instance to provision."
            }
        },
        "capacityUnits": {
            "type": "int",
            "minValue": 1,
            "defaultValue": 1,
            "metadata": {
                "description": "Number of desired IoT Hub units. Restricted to 1 unit for F1. Can be set up to maximum number allowed for subscription."
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The admin user of the SQL Server"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The password of the admin user of the SQL Server"
            }
        },
        "sqldatabasename": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of SQL database"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
                "description": "Describes plan's instance count"
            }
        },
        "webSiteName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes Web Site name which should be unique"
            }
        },
        "webSiteNameDr": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes Web Site name which should be unique for recovery app"
            }
        },
        "nodeServerName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the node server name which should be unique"
            }
        },
        "apiServerName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes API Server name which should be unique"
            }
        },
        "AdSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Subscription ID of your Azure AD tenant"
            }
        },
        "AdTenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Tenant ID of Azure AD"
            }
        },
        "b2cTenant": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes B2C Tenant Name Directory"
            }
        },
        "b2cClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the client Id registered with B2C Directory"
            }
        },
        "b2cClientIdDr": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "if you select costing model 4 specify client id describes the client Id registered with B2C Directory the disaster recovery webapplication"
            }
        },
        "b2cSignUpSignInPolicyId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the B2C Sign Up-Sign In policy"
            }
        },
        "b2cNativeRedirectURL": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the B2C redirect URL for the Native Client"
            }
        },
        "b2cNativeRedirectURLDr": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "if you select costing model 4 specify b2cNativeRedirectURL describes the B2C redirect URL for the Native Client of disaster recovery web application"
            }
        },
        "AdClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Client ID of Azure AD application"
            }
        },
        "AdSecretKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Secret Key of Azure AD application"
            }
        },
        "webjobStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ]
        },
        "readRegionLocation": {
            "type": "string",
            "defaultValue": "westus",
            "metadata": {
                "description": "if you select costing model 4 specify the read region of the cosmos database account the region should be different of the resource group region"
            },
            "allowedValues": [
                "eastasia",
                "southeastasia",
                "centralus",
                "eastus",
                "eastus2",
                "westus",
                "northcentralus",
                "southcentralus",
                "northeurope",
                "westeurope",
                "japanwest",
                "japaneast",
                "brazilsouth",
                "australiaeast",
                "australiasoutheast",
                "southindia",
                "centralindia",
                "westindia",
                "canadacentral",
                "canadaeast",
                "uksouth",
                "ukwest",
                "westcentralus",
                "westus2",
                "koreacentral",
                "koreasouth"
            ]
        },
        "omsWorkspaceRegion": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "eastus",
                "westeurope",
                "southeastasia",
                "australiasoutheast"
            ],
            "metadata": {
                "description": "specify the region for oms workspace, if you have selected solution type as without monitoring this is optional"
            }
        },
        "omsAutomationRegion": {
            "type": "string",
            "defaultValue": "eastus2",
            "allowedValues": [
                "westeurope",
                "southeastasia",
                "eastus2",
                "southcentralus",
                "japaneast",
                "southeastasia",
                "southcentralus",
                "northeurope",
                "canadacentral",
                "australiasoutheast",
                "centralindia",
                "japaneast"
            ],
            "metadata": {
                "description": "specify the region for oms automation account, if you have selected solution type as without monitoring this is optional"
            }
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 7,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "specify the oms retention period in days, if you have selected solution type as without monitoring this is optional"
            }
        },
        "trafficRoutingMethod": {
            "type": "string",
            "defaultValue": "Priority",
            "allowedValues": [
                "Performance",
                "Weighted",
                "Geographic",
                "Priority"
            ],
            "metadata": {
                "description": "specify the traffic routing method for traffic manager"
            }
        }
    },
    "variables": {
        "costingOne": {
            "iotHubSkuName": "F1",
            "skuName": "F1",
            "omsLogAnalyticsSku": "standalone",
            "edition": "Basic",
            "requestedServiceObjectiveName": "Basic",
            "maxSizeBytes": "2147483648",
            "eventHubSku": "Basic"
        },
        "costingTwo": {
            "iotHubSkuName": "S1",
            "skuName": "B1",
            "omsLogAnalyticsSku": "standalone",
            "edition": "Basic",
            "requestedServiceObjectiveName": "Basic",
            "maxSizeBytes": "2147483648",
            "eventHubSku": "Basic"
        },
        "costingThree": {
            "iotHubSkuName": "S1",
            "skuName": "B1",
            "omsLogAnalyticsSku": "standalone",
            "edition": "Standard",
            "requestedServiceObjectiveName": "S0",
            "maxSizeBytes": "32212254720",
            "eventHubSku": "Standard"
        },
        "costingFour": {
            "iotHubSkuName": "S1",
            "skuName": "S1",
            "omsLogAnalyticsSku": "standalone",
            "edition": "Standard",
            "requestedServiceObjectiveName": "S0",
            "maxSizeBytes": "32212254720",
            "eventHubSku": "Standard"
        },
        "webJobStorage": {
            "location": "[variables('location')]",
            "locationDr": "[parameters('locationDr')]",
            "webjobStorageName": "[concat('myperstr', uniqueString(resourceGroup().id))]",
            "webjobStorageType": "[parameters('webjobStorageType')]",
            "storageApiVersion": "2015-06-15"
        },
        "documentDB": {
            "location": "[variables('location')]",
            "DocDBAccountName": "[variables('DocDBAccountName')]",
            "offerType": "Standard",
            "DocDBName": "AssetTrackingDB",
            "DocDBGroupGpsCollection": "GroupGpsData",
            "DocDBSensorCollection": "SensorData",
            "DocDBOfferThroughput": "400",
            "readRegionLocation": "[parameters('readRegionLocation')]",
            "documentDBAuthKey": "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('DocDBAccountName'))]"
        },
        "hostingPlan": {
            "location": "[variables('location')]",
            "hostingPlanName": "[concat('appSerPlan', variables('suffix'))]",
            "locationDr": "[parameters('locationDr')]",
            "hostingPlanNameDr": "[concat('appSerPlanDr', variables('suffix'))]",
            "webSkuName": "[variables(concat('costing',parameters('costingModel'))).skuName]",
            "skuCapacity": "[parameters('skuCapacity')]"
        },
        "webApp": {
            "location": "[variables('location')]",
            "webSiteName": "[parameters('webSiteName')]",
            "webSiteNameDr": "[parameters('webSiteNameDr')]",
            "locationDr": "[parameters('locationDr')]",
            "WebAppPackageURI": "https://projectiot.blob.core.windows.net/ams-iot/webappsAppinsightsCode/webapp_appins511.zip",
            "WebAppPackageURI1": "https://projectiot.blob.core.windows.net/ams-iot/AMSLatestcode/webapp.zip",
            "BlobconnectionString": "[variables('BlobconnectionString')]",
            "websiteFullAddress": "[concat('https://',parameters('webSiteName'),'.azurewebsites.net/')]",
            "websiteFullAddress1": "[concat('https://',parameters('webSiteName'),'.trafficmanager.net/')]"
        },
        "restServer": {
            "location": "[variables('location')]",
            "apiServerName": "[concat(parameters('apiServerName'),variables('suffix'))]",
            "apiServerNameDr": "[concat(parameters('apiServerName'),'dr',variables('suffix'))]",
            "locationDr": "[parameters('locationDr')]",
            "RESTServerPackageURI": "https://projectiot.blob.core.windows.net/ams-iot/webappsAppinsightsCode/RestServer_appins511.zip",
            "RESTServerPackageURI1": "https://projectiot.blob.core.windows.net/ams-iot/AMSLatestcode/AMSRestServerV2.zip",
            "BlobconnectionString": "[variables('BlobconnectionString')]",
            "WindowsManagementUri": "https://management.core.windows.net/",
            "ReportJobName": "TestJob",
            "alertJobTable": "Alerts",
            "ADEndpoint": "https://login.windows.net/",
            "AdSubscriptionId": "[parameters('AdSubscriptionId')]",
            "AdTenantId": "[parameters('AdTenantId')]",
            "AdClientId": "[parameters('AdClientId')]",
            "AdSecretKey": "[parameters('AdSecretKey')]",
            "JobResourceGroup": "[resourceGroup().name]"
        },
        "nodeServer": {
            "location": "[variables('location')]",
            "locationDr": "[parameters('locationDr')]",
            "nodeServerName": "[concat(parameters('nodeServerName'),variables('suffix'))]",
            "nodeServerNameDr": "[concat(parameters('nodeServerName'),'dr',variables('suffix'))]",
            "NodeServerPackageURI": "https://projectiot.blob.core.windows.net/ams-iot/webappsAppinsightsCode/node_appins419.zip",
            "NodeServerPackageURI1": "https://projectiot.blob.core.windows.net/ams-iot/AMSLatestcode/nodeserver419.zip",
            "BlobconnectionString": "[variables('BlobconnectionString')]"
        },
        "appInsights": {
            "appInsightsLocation": "[parameters('appInsightsLocation')]",
            "appInsightsApiVersion": "2014-04-01",
            "appInsightResourceName": "[concat('AppInsights', uniquestring(resourceGroup().id))]"
        },
        "sqlServer": {
            "location": "[variables('location')]",
            "sqlserverName": "[variables('sqlserverName')]",
            "databaseConnString": "[concat('Server=tcp:',variables('sqlFailoverGroupName'),'.database.windows.net;initial catalog=',parameters('sqldatabasename'),';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'),';MultipleActiveResultSets=True;Encrypt=True;TrustServerCertificate=False;')]",
            "databaseConnString1": "[concat('Server=tcp:',variables('sqlserverName'),'.database.windows.net;initial catalog=',parameters('sqldatabasename'),';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'),';MultipleActiveResultSets=True;Encrypt=True;TrustServerCertificate=False;')]",
            "sqlServerAddress": "[concat('tcp:',variables('sqlFailoverGroupName'),'.database.windows.net')]",
            "sqlServerAddress1": "[concat('tcp:',variables('sqlserverName'),'.database.windows.net')]",
            "sqldatabasename": "[parameters('sqldatabasename')]",
            "sqlAdministratorLogin": "[parameters('sqlAdministratorLogin')]",
            "recoverySqlAuthenticationLogin": "[parameters('sqlAdministratorLogin')]",
            "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
            "recoverySqlAuthenticationPassword": "[parameters('sqlAdministratorLoginPassword')]",
            "storageKeyType": "SharedAccessKey",
            "storageKey": "?",
            "sqlFailoverGroupName": "[concat('azuresqlfailover', uniqueString(resourceGroup().id))]",
            "recoveryServerName": "[concat('recoverysqlserver', uniqueString(resourceGroup().id))]",
            "sqlDBApiVersion": "2014-04-01-preview",
            "locationDr": "[parameters('locationDr')]",
            "sqlServerApiVersion": "2015-05-01-preview",
            "maxSizeBytes": "[variables(concat('costing',parameters('costingModel'))).maxSizeBytes]",
            "requestedServiceObjectiveName": "[variables(concat('costing',parameters('costingModel'))).requestedServiceObjectiveName]",
            "edition": "[variables(concat('costing',parameters('costingModel'))).edition]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "bacpacUri": "https://projectiot.blob.core.windows.net/ams-iot/AMSLatestcode/AssetMonitoring.bacpac",
            "DeployStorageAccountKey": "[variables('DeployStorageAccountKey')]"
        },
        "omsSettings": {
            "omsWorkspaceName": "[concat('omswsams', variables('suffix'))]",
            "omsWorkspaceRegion": "[parameters('omsWorkspaceRegion')]",
            "omsAutomationRegion": "[parameters('omsAutomationRegion')]",
            "omsAutomationAccountName": "[concat('autoupdateams', variables('suffix'))]",
            "dataRetention": "[parameters('dataRetention')]",
            "omsApiVersion": "2015-03-20",
            "omsDataApiVersion": "2015-11-01-preview",
            "omsLogAnalyticsSku": "[variables(concat('costing',parameters('costingModel'))).omsLogAnalyticsSku]",
            "omsEnableApiVersion": "2015-07-01"
        },
        "eventHub": {
            "location": "[variables('location')]",
            "namespaceName": "[variables('namespaceName')]",
            "eventHubName": "[variables('eventHubName')]",
            "eventHubSku": "[variables(concat('costing',parameters('costingModel'))).eventHubSku]",
            "defaultSASKeyName": "[variables('defaultSASKeyName')]",
            "eventhubNamepaceResourceID": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('namespaceName'), variables('defaultSASKeyName'))]",
            "primaryKey": "[variables('primaryKey')]",
            "secondaryKey": "[variables('secondaryKey')]",
            "eventhubConnectionString": "[concat('Endpoint=sb://', variables('namespaceName'), '.servicebus.windows.net/;SharedAccessKeyName=EventHubOwner;SharedAccessKey=', variables('primaryKey'))]"
        },
        "iotHub": {
            "location": "[variables('location')]",
            "skuCapacity": "[parameters('skuCapacity')]",
            "skuName": "[variables(concat('costing',parameters('costingModel'))).iotHubSkuName]",
            "capacityUnits": "[parameters('capacityUnits')]",
            "iotHubKeyName": "[variables('iotHubKeyName')]",
            "iotHubName": "[variables('iotHubName')]",
            "iotHubHostName": "[concat(variables('iotHubName'),'.azure-devices.net')]",
            "iotHubID": "[resourceId('Microsoft.Devices/IotHubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName'))]",
            "d2cConsumerGroupName": "congrp_"
        },
        "trafficManagerSettings": {
            "trafficManagerApiVersion": "2017-05-01",
            "trafficManagerName": "[parameters('webSiteName')]",
            "trafficRoutingMethod": "[parameters('trafficRoutingMethod')]"
        },
        "B2CVariables": {
            "b2cAadInstance": "https://login.microsoftonline.com/{0}/v2.0/.well-known/openid-configuration?p={1}",
            "MobileTokenURL": "https://login.microsoftonline.com/{0}/oauth2/v2.0/token?p={1}&amp;grant_type=authorization_code&amp;client_id={2}&amp;code={3}",
            "MobileInstanceUrl": "https://login.microsoftonline.com/{0}/oauth2/v2.0/authorize?p={1}&amp;client_id={2}&amp;response_type=code&amp;redirect_uri={3}&amp;response_mode=query&amp;scope=openid&amp;state=arbitrary_data_you_can_receive_in_the_response",
            "b2cTenant": "[parameters('b2cTenant')]",
            "b2cClientId": "[parameters('b2cClientId')]",
            "b2cClientIdDr": "[parameters('b2cClientIdDr')]",
            "b2cSignUpSignInPolicyId": "[parameters('b2cSignUpSignInPolicyId')]",
            "b2cNativeRedirectURL": "[parameters('b2cNativeRedirectURL')]",
            "b2cNativeRedirectURLDr": "[parameters('b2cNativeRedirectURLDr')]",
            "AlertJobConsumerGroupPrefix": "congrp_"
        },
        "DocDBAccountName": "[concat(toLower(variables('databaseAccountNamePrefix')),variables('suffix'))]",
        "databaseAccountNamePrefix": "docdb",
        "sqlFailoverGroupName": "[concat('azuresqlfailover', uniqueString(resourceGroup().id))]",
        "eventHubName": "[concat('eventhub',variables('suffix'))]",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "primaryKey": "[concat(uniqueString(variables('namespaceName'), resourceGroup().Id, 'primaryKey'),'3VZcT2e5NfVeSFvTuiYUiWtXhxnJ2s=')]",
        "secondaryKey": "[concat(uniqueString(variables('namespaceName'), resourceGroup().Id, 'secondaryKey'),'F9NRSV78nYomDlFjsz21X9aVKPL4Eo=')]",
        "BlobconnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('DeployStorageAccountName'),';AccountKey=',variables('DeployStorageAccountKey'))]",
        "PowerGridEntities": "[concat('metadata=res://*/Entities.PowergridModel.csdl|res://*/Entities.PowergridModel.ssdl|res://*/Entities.PowergridModel.msl;provider=System.Data.SqlClient;provider connection string=\"data source=',variables('sqlFailoverGroupName'),'.database.windows.net;initial catalog=',parameters('sqldatabasename'),';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'),';multipleactiveresultsets=True;application name=EntityFramework\"')]",
        "PowerGridEntities1": "[concat('metadata=res://*/Entities.PowergridModel.csdl|res://*/Entities.PowergridModel.ssdl|res://*/Entities.PowergridModel.msl;provider=System.Data.SqlClient;provider connection string=\"data source=',variables('sqlserverName'),'.database.windows.net;initial catalog=',parameters('sqldatabasename'),';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'),';multipleactiveresultsets=True;application name=EntityFramework\"')]",
        "iotHubName": "[concat(parameters('iotHubName1'),uniqueString(resourceGroup().id))]",
        "iotHubKeyName": "iothubowner",
        "DeployStorageAccountName": "projectiot",
        "DeployStorageAccountKey": "68qPHnikzAitr3fjvPAyem7Tc0y2pf+BVob4F+opoX20PhV0yJGQc/guxxhCV/Uscp0gE1EHn+GCGfwOiaF9tg==",
        "SasToken": "?",
        "subId": "[subscription().subscriptionId]",
        "rgName": "[resourceGroup().name]",
        "location": "[resourceGroup().location]",
        "sqlserverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
        "namespaceName": "[concat('namespace',uniqueString(resourceGroup().id))]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "deploymentApiVersion": "2016-02-01",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/ams-iot/costing-eventhub/"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "DocumentDB1",
            "condition": "[equals(parameters('costingModel'),'One')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/doc-db.json','?token=AYpAeAMv-hN5_X_h58HYIsKc0dAe0BI4ks5bDoJEwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "DocumentDB2",
            "condition": "[equals(parameters('costingModel'),'Two')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/doc-db.json','?token=AYpAeAMv-hN5_X_h58HYIsKc0dAe0BI4ks5bDoJEwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "DocumentDB3",
            "condition": "[equals(parameters('costingModel'),'Three')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/doc-db.json','?token=AYpAeAMv-hN5_X_h58HYIsKc0dAe0BI4ks5bDoJEwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "DocumentDBGeo",
            "condition": "[equals(parameters('costingModel'),'Four')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/docdb-geo.json','?token=AYpAeBhXKp9y8WCTyAgrKL64hCpRxundks5bDjKAwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "StorageSetup",
            "condition": "[equals(parameters('costingModel'),'Four')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/storage-account.json','?token=AYpAeFVaZf4wZcN6GxPnb--yONMf__JBks5bDoStwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "DocumentDBOMS",
            "condition": "[equals(parameters('solutionType'),'solution with monitoring')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace",
                "DocumentDB1",
                "DocumentDB2",
                "DocumentDB3",
                "DocumentDBGeo"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/docdb-oms.json','?token=AYpAeB54dyngEyOVoTJInPvCFcT_8Y_bks5bDoKcwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "OMSWorkSpace",
            "condition": "[equals(parameters('solutionType'),'solution with monitoring')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/oms-workspace.json','?token=AYpAeMYnHKN5UHLH5sK6pzUDwVvE5wRUks5bDoJAwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "IotHubOMS",
            "condition": "[equals(parameters('solutionType'),'solution with monitoring')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iothub-oms.json','?token=AYpAeAtw0tw36mUjSMTYYRYdFswt9Mhhks5bDoI-wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "IotHub",
            "condition": "[equals(parameters('solutionType'),'solution without monitoring')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json','?token=AYpAeIFrvX45CRFQ4nwEYOXs-iTQKY4xks5bDoI8wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EventHub1",
            "condition": "[equals(parameters('costingModel'),'One')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/eventhub-basic.json','?token=AYpAeCrCuvCjrjxOX7SOzaVKUNRO9gYSks5bDrTswA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EventHub2",
            "condition": "[equals(parameters('costingModel'),'Two')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/eventhub-basic.json','?token=AYpAeCrCuvCjrjxOX7SOzaVKUNRO9gYSks5bDrTswA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EventHub3",
            "condition": "[equals(parameters('costingModel'),'Three')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/eventhub.json','?token=AYpAeFBjEK-9TatgYtZ4RxMDllAZdfcRks5bDrSJwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EventHub4",
            "condition": "[equals(parameters('costingModel'),'Four')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/eventhub.json','?token=AYpAeFBjEK-9TatgYtZ4RxMDllAZdfcRks5bDrSJwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EventHubOMS",
            "condition": "[equals(parameters('solutionType'),'solution with monitoring')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/event-huboms.json','?token=AYpAeP4uxjp4fYEPxJKlQ6H86KHKzg0Wks5bDoJKwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServeroms1",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'One'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sql-server.json','?token=AYpAeH6RP5P2-d5NBe28IB6d9dSuXL8fks5bDoRxwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServeroms2",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Two'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sql-server.json','?token=AYpAeH6RP5P2-d5NBe28IB6d9dSuXL8fks5bDoRxwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServeroms3",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Three'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sql-server.json','?token=AYpAeH6RP5P2-d5NBe28IB6d9dSuXL8fks5bDoRxwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServer1",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'One'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlserver-outmonitor.json','?token=AYpAeEm7mkz3dqyTslFKjp8ijRAD1tv-ks5bDoSkwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServer2",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Two'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlserver-outmonitor.json','?token=AYpAeEm7mkz3dqyTslFKjp8ijRAD1tv-ks5bDoSkwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServer3",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Three'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlserver-outmonitor.json','?token=AYpAeEm7mkz3dqyTslFKjp8ijRAD1tv-ks5bDoSkwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServerGeoOms",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Four'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlgeo-monitor.json','?token=AYpAeKibmo9uvz3P2PJqtZK6n_ztp3tQks5bDoSgwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServerGeo",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Four'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlgeo-outmonitor.json','?token=AYpAeHS_LeKMAWGSr8MguOSGEVSbkIoOks5bDoSqwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "AppInsights",
            "condition": "[equals(parameters('solutionType'),'solution with monitoring')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-insights.json','?token=AYpAeFPSgEK-QeoF2q5xzk8TuP_mZmOaks5bDoJDwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsOutMonitor",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Two'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "DocumentDB2",
                "IotHub",
                "EventHub2",
                "SqlServer2",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webapps-outmonitor.json','?token=AYpAeKqCa1FQ5tMInHJP-GMO2BIfgS-3ks5bDoS1wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsMonitor",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Two'))]",
            "dependsOn": [
                "DocumentDBOMS",
                "DocumentDB2",
                "IotHubOMS",
                "EventHub2",
                "EventHubOMS",
                "SqlServeroms2",
                "OMSWorkSpace",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webapps-monitor.json','?token=AYpAeLUDFAybczFrE-qy2rgjYdSqMtzwks5bDoSzwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    },
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsOutMonitorcosting3",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Three'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "DocumentDB3",
                "IotHub",
                "EventHub3",
                "SqlServer3",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webapps-outmonitor.json','?token=AYpAeMBw-glU7JRTM7ZgHjWX4JgihYwEks5bDjSKwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsMonitorcosting3",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Three'))]",
            "dependsOn": [
                "DocumentDBOMS",
                "DocumentDB3",
                "IotHubOMS",
                "EventHub3",
                "EventHubOMS",
                "SqlServeroms3",
                "OMSWorkSpace",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webapps-monitor.json','?token=AYpAeLUDFAybczFrE-qy2rgjYdSqMtzwks5bDoSzwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    },
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsplanf1",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'One'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "DocumentDB1",
                "IotHub",
                "EventHub1",
                "SqlServer1",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webapps-planf1.json','?token=AYpAeBcKbb5C3V-hym4iKYi_kgzxNh48ks5bDoS3wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsF1planOMS",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'One'))]",
            "dependsOn": [
                "DocumentDBOMS",
                "DocumentDB1",
                "IotHubOMS",
                "EventHub1",
                "EventHubOMS",
                "SqlServeroms1",
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webapps-planf1monitor.json','?token=AYpAeCpFpR6t4wZKsrr1WBP_1KROEm30ks5bDoS5wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    },
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsOutMonitorcosting4",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Four'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "DocumentDBGeo",
                "IotHub",
                "EventHub4",
                "SqlServerGeo",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webappsha-outmonitor.json','?token=AYpAeIDf6fcstMFbIsF_zqXFNWnPoecCks5bDoTFwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsMonitorcosting4",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Four'))]",
            "dependsOn": [
                "DocumentDBOMS",
                "DocumentDBGeo",
                "IotHubOMS",
                "EventHub4",
                "EventHubOMS",
                "SqlServerGeoOms",
                "OMSWorkSpace",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webappsha-monitor.json','?token=AYpAeFxFK7y6lJ6DDVAAtFjd_zkw1eLCks5bDoTDwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    },
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsDrOutMonitorcosting4",
            "condition": "[and(equals(parameters('solutionType'),'solution without monitoring'), equals(parameters('costingModel'),'Four'))]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "DocumentDBGeo",
                "IotHub",
                "EventHub4",
                "SqlServerGeo",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webappsha-droutmonitor.json','?token=AYpAeO8oLyiUOhNRp2JlmJ2c7B4ml-m4ks5bDoS_wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WebAppsDrMonitorcosting4",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[and(equals(parameters('solutionType'),'solution with monitoring'), equals(parameters('costingModel'),'Four'))]",
            "dependsOn": [
                "DocumentDBOMS",
                "DocumentDBGeo",
                "IotHubOMS",
                "EventHub4",
                "EventHubOMS",
                "SqlServerGeoOms",
                "OMSWorkSpace",
                "StorageSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/webappsha-drmonitor.json','?token=AYpAeJYPZbBF1zNhDsKSVN1fXsjVennYks5bDoTBwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    },
                    "hostingPlan": {
                        "value": "[variables('hostingPlan')]"
                    },
                    "restServer": {
                        "value": "[variables('restServer')]"
                    },
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "webJobStorage": {
                        "value": "[variables('webJobStorage')]"
                    },
                    "iotHub": {
                        "value": "[variables('iotHub')]"
                    },
                    "sqlServer": {
                        "value": "[variables('sqlServer')]"
                    },
                    "eventHub": {
                        "value": "[variables('eventHub')]"
                    },
                    "B2CVariables": {
                        "value": "[variables('B2CVariables')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "nodeServer": {
                        "value": "[variables('nodeServer')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "documentDBEndpoint": {
                        "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "TrafficManagerApps",
            "condition": "[equals(parameters('costingModel'),'Four')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "WebAppsDrMonitorcosting4",
                "WebAppsMonitorcosting4",
                "WebAppsDrOutMonitorcosting4",
                "WebAppsOutMonitorcosting4"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/traffic-manager.json','?token=AYpAeP8l8DWWEB-csgvMIysCb7w1KAN9ks5bDoSwwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "trafficManagerSettings": {
                        "value": "[variables('trafficManagerSettings')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "azureSQLUsername": {
            "type": "string",
            "value": "[parameters('sqlAdministratorLogin')]"
        },
        "azureSqlPassword": {
            "type": "string",
            "value": "Enter the sqlAdministratorLoginPassword which you have enetered in parameter section while deploying the template."
        },
        "sqlServerEndPoint": {
            "type": "string",
            "value": "[concat(variables('sqlServer').sqlserverName,'.database.windows.net')]"
        },
        "SqlDatabasename": {
            "type": "string",
            "value": "[parameters('sqlAdministratorLogin')]"
        },
        "WebAppUrl": {
            "type": "string",
            "value": "[concat('https://',variables('webApp').webSiteName,'.azurewebsites.net/')]"
        },
        "apiServerUrl": {
            "type": "string",
            "value": "[concat('https://',variables('restServer').apiServerName,'.azurewebsites.net/')]"
        },
        "NodeServerUrl": {
            "type": "string",
            "value": "[concat('https://',variables('nodeServer').nodeServerName,'.azurewebsites.net/')]"
        },
        "WebAppTrafficManagerUrl": {
            "type": "string",
            "value": "[concat('https://',variables('webApp').webSiteName,'.trafficmanager.net/')]"
        },
        "DocumentDBName": {
            "type": "string",
            "value": "[variables('documentDB').DocDBName]"
        },
        "DocumentDBUrl": {
            "type": "string",
            "value": "[concat('https://',variables('documentDB').DocDBAccountName,'.documents.azure.com:443/')]"
        },
        "DocumentDBCollectionName": {
            "type": "string",
            "value": "[variables('documentDB').DocDBSensorCollection]"
        },
        "appInsightsUrl": {
            "type": "string",
            "value": "[concat('https://analytics.applicationinsights.io/subscriptions/',variables('subId'),'/resourcegroups/',variables('rgName'),'/components/',variables('appInsights').appInsightResourceName,'#/')]"
        }
    }
}
